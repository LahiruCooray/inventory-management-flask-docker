replicaCount: 1
image:
  registry: docker.io
  repository: lahirucooray/inventory-management-app
  pullPolicy: IfNotPresent
  tag:  0.2

containerPort:
  port: 5000

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""


serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}

podLabels: 
  app: inventory-app

podSecurityContext: {}


securityContext: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80


environment:
 - env: FLASK_ENV
   value: development
   
nodeSelector: {}

tolerations: []

affinity: {}

labels:
  app: inventory-app

selectorLabels:
  app: inventory-app

service:
  - name: webapp-service
    type: NodePort
    port: 5000
    targetPort: 5000
    nodePort: 30009
    protocol: TCP
    labels:
      app: inventory-app
    selectorLabels:
      app: inventory-app

  - name: postgres-service
    type: ClusterIP
    port: 5432
    targetPort: 5432
    protocol: TCP
    labels:
      app: postgres
    selectorLabels:
      app: postgres

statefulset:
  - name: "postgres"
    database-protocol: "postgresql://"
    replicas: 1
    labels:
      app: postgres
    selectorLabels:
      app: postgres
    image:
      repository: "postgres"
    imagetag: "15"
    volume:
      name: "db-storage"
      accessMode: ReadWriteMany
      size: "5Gi"
      storageClass: "standard"
      mountPath: "/var/lib/postgresql/data1"
    userKey: "USER_NAME"
    dbKey: "DATABASE_NAME"
    passKey: "PASSWORD"

configMap:
  - user:
      userKey: "POSTGRES_USER"
    db:
      dbKey: "POSTGRES_DB"
    name: postgres
 
secret:
  - name: postgres
    key: "POSTGRES_PASSWORD" 

  - name: web-app
    key: "USER_PASSWORD" 

persistentVolume:
  - name: "db-storage-pv"
    capacity: "5Gi"  
    volumeMode: "Filesystem"
    accessModes:
      - "ReadWriteMany"
    reclaimPolicy: "Retain"
    storageClass: "standard"
    hostPath: "/data/postgresql-data1"  
    type: "DirectoryOrCreate"
    labels:
      app: inventory-app
    annotations:
      enabled: true
      policy: "keep"     



